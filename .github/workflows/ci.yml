name: Deploy vue.js to aws s3

on:
  push:
    branches: [master, dev, ci]

jobs:
  create_pr:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - uses: actions/checkout@v2

      - name: Check pr is opened
        if: ${{ github.ref_name != 'master' }}
        run: |
          PR_OPENED_COUNT=`gh pr list --state open --search "head:dev base:master" --json id | jq length`
          echo $PR_OPENED_COUNT
          echo "::set-output name=PR_OPENED_COUNT::$PR_OPENED_COUNT"
        id: check_pr

      - name: Create pr
        if: ${{ steps.check_pr.outputs.PR_OPENED_COUNT == '0' && github.ref_name != 'master' }}
        run: |
          gh pr create \
            --title '${{ github.event.head_commit.message }}' \
            --body 'Created by DevOps bot.' \
            --head '${{ github.ref_name }}' \
            --base 'master'

  delpoy_to_s3:
    runs-on: ubuntu-latest
    needs: [create_pr]
    env:
      PHASE: "${{ github.ref_name == 'master' && 'prod' || github.ref_name }}"
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Cache node modules
        if: ${{ github.ref_name != 'ci' }}
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: ${{ github.ref_name != 'ci' }}
        run: |
          npm ci

      - name: Build
        if: ${{ github.ref_name != 'ci' }}
        run: |
          npm run build -- --mode ${{ env.PHASE }}

      - name: Deploy
        if: ${{ github.ref_name != 'ci' }}
        run: |
          aws s3 sync --delete --quiet dist s3://${{ secrets.AWS_S3_NAME }}/${{ env.PHASE }}

      - name: Invalidate CloudFront cache
        if: ${{ env.PHASE != 'prod' && github.ref_name != 'ci'}}
        run: |
          if [ $PHASE == "dev" ]; then
            CF_DIST=${{ secrets.AWS_CF_DIST_DEV }}
          elif [ $PHASE == "staging" ]; then
            echo "1234"
          fi

          aws cloudfront create-invalidation --distribution-id $CF_DIST --paths "/*"

          echo "Service URL :"
          aws cloudfront get-distribution --id $CF_DIST |jq ".Distribution.DistributionConfig.Aliases.Items"

  merge_pr:
    runs-on: ubuntu-latest
    needs: [delpoy_to_s3]
    if: ${{ github.ref_name != 'master' }}
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - uses: actions/checkout@v2

      - name: Auto merge
        run: |
          gh pr merge --auto --merge
